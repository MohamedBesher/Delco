@model Saned.Delco.Admin.Models.SettingViewModel

@{
    ViewBag.Title = "الاعدادات";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<div class="col-lg-12">
    <div class="card-box">
     
        
        
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            @Html.HiddenFor(model => model.Id)
            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })


            
                <div class="header-title m-t-0 m-b-30">

                    اعدادات السعر

                </div>
                <hr/>

                <div class="form-group">
                    @Html.LabelFor(model => model.MinimumPrice, htmlAttributes: new {@class = "col-sm-3 control-label"})
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.MinimumPrice, new {htmlAttributes = new {@class = "form-control"}})
                        @Html.ValidationMessageFor(model => model.MinimumPrice, "", new {@class = "text-danger"})
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.StartPrice, htmlAttributes: new {@class = "col-sm-3 control-label"})
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.StartPrice, new {htmlAttributes = new {@class = "form-control"}})
                        @Html.ValidationMessageFor(model => model.StartPrice, "", new {@class = "text-danger"})
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.KiloMeterPrice, htmlAttributes: new {@class = "col-sm-3 control-label"})
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.KiloMeterPrice, new {htmlAttributes = new {@class = "form-control"}})
                        @Html.ValidationMessageFor(model => model.KiloMeterPrice, "", new {@class = "text-danger"})
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.MinutePrice, htmlAttributes: new {@class = "col-sm-3 control-label"})
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.MinutePrice, new {htmlAttributes = new {@class = "form-control"}})
                        @Html.ValidationMessageFor(model => model.MinutePrice, "", new {@class = "text-danger"})
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ManagementPercentage, htmlAttributes: new {@class = "col-sm-3 control-label"})
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.ManagementPercentage, new {htmlAttributes = new {@class = "form-control"}})
                        @Html.ValidationMessageFor(model => model.ManagementPercentage, "", new {@class = "text-danger"})
                    </div>
                </div>
                
                
                <div class="header-title m-t-0 m-b-30">
                   البريد الالكترونى
                </div>
                <hr />
             
                
                
                


                <div class="form-group">
                    @Html.LabelFor(model => model.AbuseEmail, htmlAttributes: new { @class = "col-sm-3 control-label" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.AbuseEmail, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.AbuseEmail, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ContactUsEmail, htmlAttributes: new { @class = "col-sm-3 control-label" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.ContactUsEmail, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ContactUsEmail, "", new { @class = "text-danger" })
                    </div>
                </div>
                
                <div class="header-title m-t-0 m-b-30">
                 الرسائل , الاشعارات  والشروط
                </div>
                <hr />

                <div class="form-group">
                    @Html.LabelFor(model => model.UnSupportedPathMessage, htmlAttributes: new { @class = "col-sm-3 control-label" })

                    <div class="col-md-9">
                        @Html.EditorFor(model => model.UnSupportedPathMessage, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.UnSupportedPathMessage, "", new { @class = "text-danger" })
                    </div>

                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.SuspendAgentMessage, htmlAttributes: new { @class = "col-sm-3 control-label" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.SuspendAgentMessage, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.SuspendAgentMessage, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.TermsOfConditions, htmlAttributes: new { @class = "col-sm-3 control-label" })
                    <div class="col-md-9">
                        @Html.TextAreaFor(model => model.TermsOfConditions, new { @class = "form-control ", @rows = 5 })


                        @*<textarea for="TermsOfConditions" name="TermsOfConditions" id="TermsOfConditions" class="form-control" style="width: 100%; height: 150px" maxlength="1000"></textarea>*@
                        @Html.ValidationMessageFor(model => model.TermsOfConditions, "", new { @class = "text-danger" })
                    </div>
                </div>


                <div class="form-group">
                    <div class="col-md-offset-3 col-md-10">
                        <button type="submit" class="btn btn-purple waves-effect waves-light ">حفظ</button>

                    </div>
                </div>
            </div>

        }

    </div>
</div>


@section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
    
