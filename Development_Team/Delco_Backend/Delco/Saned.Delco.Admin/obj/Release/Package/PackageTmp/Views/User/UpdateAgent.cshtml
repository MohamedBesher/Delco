@using System.Web.Mvc.Html
@using Saned.Delco.Data.Core.Enum
@model Saned.Delco.Admin.Models.AgentViewModel

@{
    ViewBag.Title = "تعديل مندوب";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<div class="row">
    <div class="col-sm-12">
        <div class="card-box">



          

            <div class="row">
                <div class="col-lg-12">
                    @if (Model != null)
                    {
                        using (Html.BeginForm())
                        {
                            @Html.AntiForgeryToken()

                            <div class="form-horizontal">

                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                @Html.HiddenFor(model => model.Id)

                                <div class="form-group">
                                    @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                        @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                        @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.FullName, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.FullName, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.CityId, new { @class = "col-md-2 control-label" })
                                    <div class="col-md-10">
                                        @Html.DropDownListFor(model => model.CityId,
                        new SelectList(ViewBag.cities, "Id", "Name"), "--اختر المدينة--", new { @class = "form-control", id = "CityId" })

                                        @Html.ValidationMessageFor(model => model.CityId, null, new { @class = "text-danger" })


                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.RequestType, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">

                                        @{
                                            var test = EnumHelper.GetSelectList(typeof(RequestTypesEnum));
                                        }

                                        @Html.DropDownListFor(model => model.RequestType, new SelectList(EnumHelper.GetSelectList(typeof(RequestTypesEnum)), "Value", "Text"), "--اختر النوع--", new { @class = "form-control", id = "RequestType" })

                                        @Html.ValidationMessageFor(model => model.RequestType, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.CompanyName, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.CompanyName, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.CompanyName, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.Type, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Model, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.Model, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Model, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Color, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.Color, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Color, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.PlateNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.PlateNumber, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.PlateNumber, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.PassengerNumberId, new { @class = "col-md-2 control-label" })
                                    <div class="col-md-10">
                                        @Html.DropDownListFor(model => model.PassengerNumberId,
                        new SelectList(ViewBag.passengerNumbers, "Value", "Text"), "--اختر عدد الركاب--", new { @class = "form-control", id = "PassengerCount" })

                                        @Html.ValidationMessageFor(model => model.PassengerNumberId, null, new { @class = "text-danger" })


                                    </div>
                                </div>




                                <div class="form-group">
                                    <div class="col-md-offset-2 col-md-10">
                                        <button type="submit" value="Save" class="btn btn-purple waves-effect waves-light">حفظ </button>
                                    </div>
                                </div>

                            </div>
                                                }
                                            }
                                            else
                                            {
                                                <div class="alert alert-success">
                                                    <strong></strong> لا يوجد مندوب.
                                                </div>
                                            }



                </div><!-- end col -->



            </div><!-- end row -->
        </div>
    </div><!-- end col -->
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
